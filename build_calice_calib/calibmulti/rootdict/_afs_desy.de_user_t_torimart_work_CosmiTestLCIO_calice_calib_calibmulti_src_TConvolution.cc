//
// File generated by /afs/desy.de/project/ilcsoft/sw/x86_64_gcc44_sl6/v01-17-09/root/5.34.30/bin/rootcint at Fri Dec  1 18:26:34 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIafsdIdesydOdedIuserdItdItorimartdIworkdICosmiTestLCIOdIbuild_calice_calibdIcalibmultidIrootdictdI_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "_afs_desy.de_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TConvolution_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TConvolution(void *p = 0);
   static void *newArray_TConvolution(Long_t size, void *p);
   static void delete_TConvolution(void *p);
   static void deleteArray_TConvolution(void *p);
   static void destruct_TConvolution(void *p);
   static void streamer_TConvolution(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TConvolution*)
   {
      ::TConvolution *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TConvolution >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TConvolution", ::TConvolution::Class_Version(), "/afs/desy.de/user/t/torimart/work/CosmiTestLCIO/calice_calib/calibmulti/include/TConvolution.h", 31,
                  typeid(::TConvolution), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TConvolution::Dictionary, isa_proxy, 0,
                  sizeof(::TConvolution) );
      instance.SetNew(&new_TConvolution);
      instance.SetNewArray(&newArray_TConvolution);
      instance.SetDelete(&delete_TConvolution);
      instance.SetDeleteArray(&deleteArray_TConvolution);
      instance.SetDestructor(&destruct_TConvolution);
      instance.SetStreamerFunc(&streamer_TConvolution);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TConvolution*)
   {
      return GenerateInitInstanceLocal((::TConvolution*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TConvolution*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TConvolution::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TConvolution::Class_Name()
{
   return "TConvolution";
}

//______________________________________________________________________________
const char *TConvolution::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TConvolution*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TConvolution::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TConvolution*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TConvolution::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TConvolution*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TConvolution::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TConvolution*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TConvolution::Streamer(TBuffer &R__b)
{
   // Stream an object of class TConvolution.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); _name = R__str.Data(); }
      R__b >> _f1;
      R__b >> _f2;
      R__b >> _convolution;
      R__b >> _nPar1;
      R__b >> _nPar2;
      R__b >> _baseNpar;
      R__b >> _stepsPerPoint;
      R__b >> _scaleParNumber;
      R__b >> _f1Rmin;
      R__b >> _f1Rmax;
      R__b >> _f2Rmin;
      R__b >> _f2Rmax;
      R__b >> _Rmin;
      R__b >> _Rmax;
      R__b >> _addScale;
      R__b.CheckByteCount(R__s, R__c, TConvolution::IsA());
   } else {
      R__c = R__b.WriteVersion(TConvolution::IsA(), kTRUE);
      TObject::Streamer(R__b);
      { TString R__str = _name.c_str(); R__str.Streamer(R__b);}
      R__b << _f1;
      R__b << _f2;
      R__b << _convolution;
      R__b << _nPar1;
      R__b << _nPar2;
      R__b << _baseNpar;
      R__b << _stepsPerPoint;
      R__b << _scaleParNumber;
      R__b << _f1Rmin;
      R__b << _f1Rmax;
      R__b << _f2Rmin;
      R__b << _f2Rmax;
      R__b << _Rmin;
      R__b << _Rmax;
      R__b << _addScale;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TConvolution::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TConvolution.
      TClass *R__cl = ::TConvolution::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_name", (void*)&_name);
      R__insp.InspectMember("string", (void*)&_name, "_name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_f1", &_f1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_f2", &_f2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_convolution", &_convolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nPar1", &_nPar1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nPar2", &_nPar2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_baseNpar", &_baseNpar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_stepsPerPoint", &_stepsPerPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_scaleParNumber", &_scaleParNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_f1Rmin", &_f1Rmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_f1Rmax", &_f1Rmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_f2Rmin", &_f2Rmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_f2Rmax", &_f2Rmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Rmin", &_Rmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Rmax", &_Rmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_addScale", &_addScale);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TConvolution(void *p) {
      return  p ? new(p) ::TConvolution : new ::TConvolution;
   }
   static void *newArray_TConvolution(Long_t nElements, void *p) {
      return p ? new(p) ::TConvolution[nElements] : new ::TConvolution[nElements];
   }
   // Wrapper around operator delete
   static void delete_TConvolution(void *p) {
      delete ((::TConvolution*)p);
   }
   static void deleteArray_TConvolution(void *p) {
      delete [] ((::TConvolution*)p);
   }
   static void destruct_TConvolution(void *p) {
      typedef ::TConvolution current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TConvolution(TBuffer &buf, void *obj) {
      ((::TConvolution*)obj)->::TConvolution::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TConvolution

/********************************************************
* /afs/desy.de/user/t/torimart/work/CosmiTestLCIO/build_calice_calib/calibmulti/rootdict/_afs_desy.de_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();

extern "C" void G__set_cpp_environment_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/afs/desy.de/user/t/torimart/work/CosmiTestLCIO/calice_calib/calibmulti/include/TConvolution.h");
  G__cpp_reset_tagtable_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();
}
#include <new>
extern "C" int G__cpp_dllrev_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TConvolution */
static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TConvolution* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TConvolution[n];
     } else {
       p = new((void*) gvp) TConvolution[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TConvolution;
     } else {
       p = new((void*) gvp) TConvolution;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TConvolution* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TConvolution(
(const char*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TConvolution(
(const char*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TConvolution(
(const char*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TConvolution(
(const char*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TConvolution(
(const char*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TConvolution(
(const char*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((TConvolution*) G__getstructoffset())->Init((const char*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TConvolution*) G__getstructoffset())->Init((const char*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TConvolution*) G__getstructoffset())->Init((const char*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TConvolution*) G__getstructoffset())->GetConvolutedFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TConvolution*) G__getstructoffset())->GetF1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TConvolution*) G__getstructoffset())->GetF2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TConvolution*) G__getstructoffset())->operator()((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TConvolution::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TConvolution::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TConvolution::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TConvolution::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TConvolution*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TConvolution::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TConvolution::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TConvolution::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TConvolution::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TConvolution* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TConvolution(*(TConvolution*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TConvolution G__TTConvolution;
static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TConvolution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TConvolution*) (soff+(sizeof(TConvolution)*i)))->~G__TTConvolution();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TConvolution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TConvolution*) (soff))->~G__TTConvolution();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TConvolution* dest = (TConvolution*) G__getstructoffset();
   *dest = *(TConvolution*) libp->para[0].ref;
   const TConvolution& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TConvolution */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution {
 public:
  G__Sizep2memfunc_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution(): p(&G__Sizep2memfunc_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution::*p)();
};

size_t G__get_sizep2memfunc_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution()
{
  G__Sizep2memfunc_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution))) {
     TConvolution *G__Lderived;
     G__Lderived=(TConvolution*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution),G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TConvolution */
static void G__setup_memvarTConvolution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution));
   { TConvolution *p; p=(TConvolution*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_string),-1,-1,4,"_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TF1),-1,-1,4,"_f1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TF1),-1,-1,4,"_f2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TF1),-1,-1,4,"_convolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_nPar1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_nPar2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_baseNpar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_stepsPerPoint=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_scaleParNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_f1Rmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_f1Rmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_f2Rmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_f2Rmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_Rmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_Rmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_addScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTConvolution(void) {
   /* TConvolution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution));
   G__memfunc_setup("TConvolution",1268,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_1, 105, G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TConvolution",1268,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_2, 105, G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name U 'TF1' - 0 - f1 "
"U 'TF1' - 0 - f2 g - - 0 'true' addScale "
"i - 'Int_t' 0 '50' stepsPerPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_3, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - name U 'TF1' - 0 - f1 "
"U 'TF1' - 0 - f2 g - - 0 'true' addScale "
"i - 'Int_t' 0 '50' stepsPerPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConvolutedFunction",2185,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_4, 85, G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetF1",407,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_5, 85, G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetF2",408,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_6, 85, G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("integrand",956,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - t d - 'Double_t' 0 - x0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convolutionFkt",1509,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_10, 85, G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TConvolution::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TConvolution::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TConvolution::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TConvolution::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TConvolution::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TConvolution::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TConvolution::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TConvolution::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TConvolution", 1268, G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_22, (int) ('i'), G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution), -1, 0, 1, 1, 1, 0, "u 'TConvolution' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TConvolution", 1394, G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution_214_0_24, (int) ('u'), G__get_linked_tagnum(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution), -1, 1, 1, 1, 1, 0, "u 'TConvolution' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_string = { "string" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution = { "TConvolution" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() {
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TClass.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TBuffer.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TMemberInspector.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TObject.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_string.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TF1.tagnum = -1 ;
  G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TClass);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TBuffer);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TObject);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_string);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TF1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolutionLN_TConvolution),sizeof(TConvolution),-1,62720,"magic ROOT stuff",G__setup_memvarTConvolution,G__setup_memfuncTConvolution);
}
extern "C" void G__cpp_setup_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution(void) {
  G__check_setup_version(30051515,"G__cpp_setup_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution()");
  G__set_cpp_environment_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();
  G__cpp_setup_tagtable_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();

  G__cpp_setup_inheritance_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();

  G__cpp_setup_typetable_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();

  G__cpp_setup_memvar_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();

  G__cpp_setup_memfunc_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();
  G__cpp_setup_global_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();
  G__cpp_setup_func_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution();
  return;
}
class G__cpp_setup_init_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution {
  public:
    G__cpp_setup_init_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() { G__add_setup_func("_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution",(G__incsetup)(&G__cpp_setup_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution)); G__call_setup_funcs(); }
   ~G__cpp_setup_init_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution() { G__remove_setup_func("_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution"); }
};
G__cpp_setup_init_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution G__cpp_setup_initializer_afs_desydOde_user_t_torimart_work_CosmiTestLCIO_calice_calib_calibmulti_src_TConvolution;

